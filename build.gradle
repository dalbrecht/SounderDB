import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import org.gradle.api.tasks.testing.logging.TestLogEvent.*

plugins {
    id 'java'
    id 'com.google.protobuf' version "0.8.18"
    id 'idea'
    id 'application'
    id("com.github.johnrengelman.shadow") version "7.0.0"
}

group 'org.c65llc'
version '0.1-SCAFFOLD'

def vertxVersion = "4.2.3"
def junitJupiterVersion = "5.7.0"

def mainVerticleName = "com.c65llc.sounderdb.MainVerticle"
def launcherClassName = "io.vertx.core.Launcher"


application {
    mainClass.set(launcherClassName)
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'com.google.protobuf:protobuf-java:3.17.2'
    testImplementation group: 'io.grpc', name: 'grpc-all', version: '1.43.2'
    implementation platform("io.vertx:vertx-stack-depchain:$vertxVersion")
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
    implementation 'io.vertx:vertx-grpc:4.2.3'
    testImplementation "io.vertx:vertx-junit5"
    testImplementation "org.junit.jupiter:junit-jupiter:$junitJupiterVersion"
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.17.2'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.43.2"
        }
        vertx {
            artifact = "io.vertx:vertx-grpc-protoc-plugin:4.2.3"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // Generates Python code in the output folder:
                python { }
                // If you wish to avoid generating Java files:
            }
        }
        all()*.plugins {
            grpc
            vertx
        }
    }
}

test {
    useJUnitPlatform()
}